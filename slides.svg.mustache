<svg
  id="slides" viewBox="0 0 800 600"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs>
    <path
      id="title_path"
      d="M 140, 300
         a 260,260 0 1,0  520,0
         a 260,260 0 1,0 -520,0" />

    <clipPath id = "me_path">
      <rect x="0" y="220" width="200" height="290" />
    </clipPath>
  </defs>

  <g id="title">
    <image xlink:href="img/community.png"        x="25%" y="25%" width="50%" height="50%"/>
    <image xlink:href="img/znk.png"              x="0"   y="79%" width="20%" height="20%"/>
    <image xlink:href="img/varnish-software.png" x="64%" y="79%" width="40%" height="20%"/>
    <text>
      <textPath xlink:href="#title_path">
        Le tour de Varnish en 30 minutes.
      </textPath>
      <animateTransform
        attributeName="transform"
        begin="0s"
        dur="10s"
        type="rotate"
        from="0 400 300"
        to="360 400 300"
        repeatCount="indefinite" />
    </text>
  </g>

  <g id="verne">
    <text x="100" y="45%">« Si Jules Verne avait imaginé le Web,</text>
    <text x="100" y="50%">on trouverait Varnish dans son roman. »</text>
    <text x="550" y="60%" style="font-style: italic">Dridi B.</text>
  </g>

  <g id="red_herring" class="xkcd">
    <image xlink:href="img/working_for_google.png" x="5%" y="20%" width="90%" height="50%"/>
    <rect x="48"  y="186" width="147" height="78" />
    <rect x="206" y="186" width="247" height="134" />
    <rect x="580" y="186" width="173" height="35" />
    <rect x="605" y="221" width="148" height="50" />
    <rect x="670" y="271" width="83"  height="20" />
    <rect x="660" y="291" width="93"  height="50" />
    <text x="80" y="260">Et donc ?</text>
    <text y="190">
      <tspan x="220" dy="20">C'est quand meme une super</tspan>
      <tspan x="220" dy="20">distinction pour Varnish </tspan>
      <tspan x="220" dy="20">Software et a l'echelle</tspan>
      <tspan x="220" dy="20">europeene ! On parle de plus</tspan>
      <tspan x="220" dy="20">en plus de Varnish un peu</tspan>
      <tspan x="220" dy="20">partout en ce moment.</tspan>
    </text>
    <text x="585" y="215">C'est quoi Varnish ?</text>
    <text x="660" y="270">Hum...</text>
  </g>

  <g id="me">
    <image
      xlink:href="img/crazy_straws.png"
      x="-360" y="-660" width="800" height="1600"
      clip-path="url(#me_path)" />
    <image xlink:href="img/troll-face.png" x="30" y="100" width="30%" height="30%"/>
    <text x="30" y="110">A propos de moi</text>

    <image xlink:href="img/znk.png" x="250" y="80" width="160" height="120"/>
    <text y="70">
      <tspan x="410" dy="40">Consultant</tspan>
      <tspan x="410" dy="40">Formateur</tspan>
      <tspan x="410" dy="40">Rédacteur</tspan>
    </text>

    <image xlink:href="img/varnish-cache.png" x="250" y="250" width="160" height="120"/>
    <text y="240">
      <tspan x="410" dy="40">Conseil/Support</tspan>
      <tspan x="410" dy="40">Formateur certifiant</tspan>
      <tspan x="410" dy="40">(Contributeur)</tspan>
    </text>

    <image xlink:href="img/Fedora_logo.png" x="250" y="420" width="160" height="120"/>
    <text y="410">
      <tspan x="410" dy="40">Fanboi Linux</tspan>
      <tspan x="410" dy="40">Fedora Packager</tspan>
      <tspan x="410" dy="40">Divers projets open-source</tspan>
    </text>
  </g>

  <g id="norway">
    <image xlink:href="img/red-herring.png"      x="10%" y="10%" width="40%" height="20%"/>
    <image xlink:href="img/varnish-software.png" x="25%" y="35%" width="50%" height="25%"/>
    <image xlink:href="img/bsdphk.png"           x="65%" y="60%" width="30%" height="30%"/>
  </g>

  <g id="principle">
    <image xlink:href="img/httpcachemiss.png" x="150" y="110" width="507" height="136"/>
    <image xlink:href="img/httpcachehit.png"  x="150" y="356" width="507" height="136"/>
  </g>

  <g id="freebsd">
    <image xlink:href="img/beastie.png" x="65%" y="10%" width="178" height="196"/>
    <text y="120">
      <tspan x="250" dy="30">pkg_add -r varnish</tspan>
      <tspan x="250" dy="40">pkg install varnish</tspan>
    </text>
  </g>

  <g id="linux">
    <use xlink:href="#freebsd" x="0" y="0"/>

    <image
      xlink:href="img/tux.png"
      x="0" y="60%" width="156" height="180"
      transform="translate(200, 0) scale(-1, 1)"/>
    <text y="330">
      <tspan x="250" dy="30">yum install varnish</tspan>
      <tspan x="250" dy="40">aptitude install varnish</tspan>
      <tspan x="250" dy="30">apt-get install varnish</tspan>
      <tspan x="250" dy="40">zypper install varnish</tspan>
      <tspan x="250" dy="40">pacman -S varnish</tspan>
      <tspan x="250" dy="40">emerge varnish</tspan>
    </text>
  </g>

  <g id="windows">
    <g style="fill: #00adef" transform="translate(305, 225)">
      <rect x="10"  y="10" width="80" height="60"/>
      <rect x="100" y="10" width="80" height="60"/>
      <rect x="10"  y="80" width="80" height="60"/>
      <rect x="100" y="80" width="80" height="60"/>
      <text style="fill: black" transform="translate(30, 40)">
        <tspan x="10"  y="10">W</tspan>
        <tspan x="100" y="10">T</tspan>
        <tspan x="10"  y="80">F</tspan>
        <tspan x="100" y="80">?</tspan>
      </text>
    </g>
    <image xlink:href="img/virtualbox.png"      x="100" y="60" width="128" height="131"/>
    <image xlink:href="img/vmware_Iphone01.png" x="560" y="60" width="150" height="112"/>
    <image xlink:href="img/logo_vagrant.png"    x="276" y="488" width="248" height="64"/>
  </g>

  <g id="package">
    <text y="110" class="code">
      <tspan x="120" dy="30">$ rpm -ql varnish | grep bin</tspan>
      <tspan x="120" dy="40">/usr/bin/varnishadm</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishhist</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishlog</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishncsa</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishreplay</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishsizes</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishstat</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishtest</tspan>
      <tspan x="120" dy="30">/usr/bin/varnishtop</tspan>
      <tspan x="120" dy="30">/usr/sbin/varnish_reload_vcl</tspan>
      <tspan x="120" dy="30">/usr/sbin/varnishd</tspan>
    </text>
  </g>

  <g id="vcl">
    <text x="130" y="50">VCL - Varnish Configuration Language</text>
    <text y="150">
      <tspan x="60" dy="40">• Contient la politique de cache</tspan>
      <tspan x="60" dy="40">• Domain Specific Language (DSL)</tspan>
      <tspan x="60" dy="40">• Proche du Perl (connu de nos admins ;)</tspan>
      <tspan x="60" dy="40">• Transformé en C puis compilé</tspan>
      <tspan x="60" dy="40">• Modifications à chaud</tspan>
      <tspan x="60" dy="40">• Expose un automate fini</tspan>
      <tspan x="60" dy="40">• Propose des règles par défaut</tspan>
    </text>
  </g>

  <g id="snippet">
    <text x="130" y="50">VCL - Varnish Configuration Language</text>
    <text y="150" class="code" xml:space="preserve">
      <tspan x="60" dy="30">sub vcl_recv {                 </tspan>
      <tspan x="60" dy="30">  if (req.url ~ "^/admin") {   </tspan>
      <tspan x="60" dy="30">    return (pass);             </tspan>
      <tspan x="60" dy="30">  }                            </tspan>
      <tspan x="60" dy="30">}                              </tspan>
      <tspan x="60" dy="30">                               </tspan>
      <tspan x="60" dy="30">sub vcl_deliver {              </tspan>
      <tspan x="60" dy="30">  unset resp.http.X-Varnish;   </tspan>
      <tspan x="60" dy="30">  unset resp.http.X-Powered-By;</tspan>
      <tspan x="60" dy="30">  unset resp.http.X-Generator; </tspan>
      <tspan x="60" dy="30">}                              </tspan>
    </text>
  </g>

  <g id="state-machine">
    <text x="130" y="50">VCL - Varnish Configuration Language</text>
    <image xlink:href="img/vcl.png" x="182" y="60" width="436" height="538"/>
  </g>

  <g id="backend">
    <text x="200" y="50">Back-ends &amp; ...</text>
    <text y="100" class="code" xml:space="preserve">
      <tspan x="60" dy="30">backend www {                 </tspan>
      <tspan x="60" dy="30">  .host = "www.example.com";  </tspan>
      <tspan x="60" dy="30">  .port = "http";             </tspan>
      <tspan x="60" dy="30">  .connect_timeout = 1s;      </tspan>
      <tspan x="60" dy="30">  .first_byte_timeout = 5s;   </tspan>
      <tspan x="60" dy="30">  .between_bytes_timeout = 2s;</tspan>
      <tspan x="60" dy="30">  .probe = {                  </tspan>
      <tspan x="60" dy="30">    .url = "/health-check";   </tspan>
      <tspan x="60" dy="30">    .timeout = 0.3s;          </tspan>
      <tspan x="60" dy="30">    .window = 8;              </tspan>
      <tspan x="60" dy="30">    .threshold = 3;           </tspan>
      <tspan x="60" dy="30">    .initial = 3;             </tspan>
      <tspan x="60" dy="30">  }                           </tspan>
      <tspan x="60" dy="30">}                             </tspan>
    </text>
  </g>

  <g id="virtualhost">
    <text x="200" y="50">Back-ends &amp; Virtual Hosts</text>
    <text y="100" class="code" xml:space="preserve">
      <tspan x="60" dy="30">backend www {                     </tspan>
      <tspan x="60" dy="30">  .host = "projet-prod-www";      </tspan>
      <tspan x="60" dy="30">  # first => default              </tspan>
      <tspan x="60" dy="30">}                                 </tspan>
      <tspan x="60" dy="30">                                  </tspan>
      <tspan x="60" dy="30">backend static {                  </tspan>
      <tspan x="60" dy="30">  .host = "projet-prod-static";   </tspan>
      <tspan x="60" dy="30">}                                 </tspan>
      <tspan x="60" dy="30">                                  </tspan>
      <tspan x="60" dy="30">sub vcl_recv {                    </tspan>
      <tspan x="60" dy="30">  if (req.http.Host               </tspan>
      <tspan x="60" dy="30">        == "static.example.com") {</tspan>
      <tspan x="60" dy="30">    set req.backend = static;     </tspan>
      <tspan x="60" dy="30">  }                               </tspan>
      <tspan x="60" dy="30">}                                 </tspan>
    </text>
  </g>

  <g id="cache">
    <text y="110" xml:space="preserve">
      <tspan x="60" dy="40">• Varnish gère:</tspan>
      <tspan x="60" dy="40">   ◦ le TTL</tspan>
      <tspan x="60" dy="40">   ◦ les variantes (entête Vary)</tspan>
      <tspan x="60" dy="40">   ◦ le gzip</tspan>
      <tspan x="60" dy="80">• Le VCL par défaut ne cache pas:</tspan>
      <tspan x="60" dy="40">   ◦ les cookies</tspan>
      <tspan x="60" dy="40">   ◦ les authentifications</tspan>
      <tspan x="60" dy="40">   ◦ les méthodes autres que GET ou HEAD</tspan>
    </text>
  </g>

  <g id="invalidation">
    <image xlink:href="img/The-Purge-Poster.jpg" x="0" y="10" width="390" height="580"/>
    <text x="440" y="50">Cache => Invalidation</text>
    <text y="100" xml:space="preserve">
      <tspan x="400" dy="40">• purge</tspan>
      <tspan x="400" dy="40">   ◦ via le VCL</tspan>
      <tspan x="400" dy="40">   ◦ immédiat</tspan>
      <tspan x="400" dy="40">   ◦ une URL à la fois</tspan>
      <tspan x="400" dy="80">• ban</tspan>
      <tspan x="400" dy="40">   ◦ via le VCL</tspan>
      <tspan x="400" dy="40">   ◦ via la console d'admin</tspan>
      <tspan x="400" dy="40">   ◦ différé</tspan>
      <tspan x="400" dy="40">   ◦ critères plus variés</tspan>
      <tspan x="400" dy="40">   ◦ invalide des régions</tspan>
    </text>
  </g>

  <g id="grace">
    <image xlink:href="img/puss_n_boots.jpg" x="0" y="308" width="300" height="292"/>
    <text x="280" y="100">Accorder un sursis</text>
    <text y="160" xml:space="preserve">
      <tspan x="60" dy="40">grace</tspan>
      <tspan x="60" dy="40">   • TTL étendu</tspan>
      <tspan x="60" dy="40">   • Sert du contenu périmé</tspan>
    </text>
    <text y="400" xml:space="preserve">
      <tspan x="350" dy="40">Utile en cas de:</tspan>
      <tspan x="350" dy="40">   • défaillance d'un back-end</tspan>
      <tspan x="350" dy="40">   • redémarrage d'un back-end</tspan>
      <tspan x="350" dy="40">   • rafraîchissement long</tspan>
    </text>
  </g>

  <g id="hawaii">
    <image xlink:href="img/hawaii.jpg" x="0" y="0" width="800" height="600"/>
    <image xlink:href="img/troll-face-dance.gif" x="50" y="350" width="200" height="200"/>
  </g>

  <g id="directors">
    <text x="200" y="50">Director != Load Balancer</text>
    <text y="100" xml:space="preserve">
      <tspan x="60" dy="40">• Maximise les chances d'obtenir une ressource</tspan>
      <tspan x="60" dy="40">• Plusieurs stratégies:</tspan>
      <tspan x="60" dy="40">   ◦ random</tspan>
      <tspan x="60" dy="40">   ◦ round robin</tspan>
      <tspan x="60" dy="40">   ◦ fallback</tspan>
      <tspan x="60" dy="40">   ◦ client (sticky)</tspan>
      <tspan x="60" dy="40">   ◦ hash</tspan>
      <tspan x="60" dy="40">   ◦ DNS</tspan>
      <tspan x="60" dy="40">• Peut servir de répartiteur de charge</tspan>
    </text>
  </g>

  <g id="fallback">
    <text x="200" y="50">Director != Load Balancer</text>
    <text y="100" class="code" xml:space="preserve">
      <tspan x="60" dy="30">backend www1 {                 </tspan>
      <tspan x="60" dy="30">  .host = "projet-prod-www-1"; </tspan>
      <tspan x="60" dy="30">}                              </tspan>
      <tspan x="60" dy="30">backend www2 {                 </tspan>
      <tspan x="60" dy="30">  .host = "projet-prod-www-2"; </tspan>
      <tspan x="60" dy="30">}                              </tspan>
      <tspan x="60" dy="30">backend www3 {                 </tspan>
      <tspan x="60" dy="30">  .host = "projet-prod-www-3"; </tspan>
      <tspan x="60" dy="30">}                              </tspan>
      <tspan x="60" dy="30">                               </tspan>
      <tspan x="60" dy="30">director www_cluster fallback {</tspan>
      <tspan x="60" dy="30">  { .backend = www1; }         </tspan>
      <tspan x="60" dy="30">  { .backend = www2; }         </tspan>
      <tspan x="60" dy="30">  { .backend = www3; }         </tspan>
      <tspan x="60" dy="30">}                              </tspan>
    </text>
  </g>

  <g id="new-york">
    <image xlink:href="img/varnish-cache.png" x="175" y="75" width="200" height="200"/>
    <text style="font-size: 200px;">
      <tspan x="445" y="235" style="fill:red">♥</tspan>
      <tspan x="195" y="465">N</tspan>
      <tspan x="445" y="465">Y</tspan>
    </text>
  </g>

  <g id="inline-c">
    <text x="230" y="100">C{ extend_varnish(); }C</text>
    <text y="150" xml:space="preserve">
      <tspan x="60" dy="40">Insérer du C dans le VCL</tspan>
      <tspan x="60" dy="40">   • pour accéder aux entrailles de Varnish</tspan>
      <tspan x="60" dy="40">   • rappel : le VCL est transformé en C</tspan>
      <tspan x="60" dy="80">Désuet depuis Varnish 3</tspan>
      <tspan x="60" dy="40">   • architecture modulaire</tspan>
      <tspan x="60" dy="40">   • VMOD => Varnish Module</tspan>
    </text>
  </g>

  <g id="vmods">
    <text x="370" y="100">VMOD</text>
    <text y="150" class="code" xml:space="preserve">
      <tspan x="40" dy="30">import std;                             </tspan>
      <tspan x="40" dy="30">                                        </tspan>
      <tspan x="40" dy="30">sub vcl_error {                         </tspan>
      <tspan x="40" dy="30">  synthetic std.fileread("/etc/varnish/"</tspan>
      <tspan x="40" dy="30">      + obj.status + ".html");          </tspan>
      <tspan x="40" dy="30">}                                       </tspan>
    </text>
    <text y="400" xml:space="preserve">
      <tspan x="40" dy="40">Il en existe d'autres :</tspan>
      <tspan x="40" dy="40">   • https://www.varnish-cache.org/vmods</tspan>
      <tspan x="40" dy="40">   • support commercial possible pour certains</tspan>
    </text>
  </g>

  <g id="varnishadm">
    <text x="320" y="100">varnishadm</text>
    <text y="150" xml:space="preserve">
      <tspan x="60" dy="40">Un shell pour contrôler Varnish</tspan>
      <tspan x="60" dy="40">   • diagnostics</tspan>
      <tspan x="60" dy="40">   • tuning</tspan>
      <tspan x="60" dy="40">   • gestion du VCL</tspan>
      <tspan x="60" dy="40">   • debug (caché =)</tspan>
      <tspan x="60" dy="80">Certaines opérations sont scriptables !</tspan>
    </text>
  </g>

  <g id="vac">
    <text x="230" y="100">One tool to rule them all</text>
    <image xlink:href="img/vac-laptop.png" x="133" y="178" width="534" height="344"/>
  </g>

  <g id="logs">
    <text x="180" y="100">Journal de bord du capitaine</text>
    <text y="150" xml:space="preserve">
      <tspan x="60" dy="40">Constat sur les logs:</tspan>
      <tspan x="60" dy="40">   • personne ne les lit/exploite...</tspan>
      <tspan x="60" dy="40">   • ... sauf quand un problème survient</tspan>
      <tspan x="60" dy="40">   • souvent trop/pas assez verbeuses</tspan>
      <tspan x="60" dy="40">   • problèmes de perfs/espace disque</tspan>
      <tspan x="60" dy="80">La solution Varnish:</tspan>
      <tspan x="60" dy="40">   • des logs binaires en mémoire</tspan>
      <tspan x="60" dy="40">   • des outils pour les exploiter</tspan>
    </text>
  </g>

  <g id="varnishlog">
    <text x="180" y="100">Journal de bord du capitaine</text>
    <text y="150" xml:space="preserve">
      <tspan x="60" dy="40">Deux types de logs:</tspan>
      <tspan x="60" dy="40">   • des compteurs</tspan>
      <tspan x="60" dy="40">   • des événements</tspan>
      <tspan x="60" dy="80">Les outils:</tspan>
      <tspan x="60" dy="40">   • varnishlog</tspan>
      <tspan x="60" dy="40">   • varnishstat</tspan>
      <tspan x="60" dy="40">   • varnishncsa</tspan>
      <tspan x="60" dy="40">   • varnishhist</tspan>
      <tspan x="60" dy="40">   • ...</tspan>
    </text>
  </g>

  <g id="speed">
    <text x="240" y="100">Pourquoi c'est important</text>
    <text y="150" xml:space="preserve">
      <tspan x="60" dy="40">La vitesse compte:</tspan>
      <tspan x="60" dy="40">   • la lenteur perçue fait perdre des visiteurs</tspan>
      <tspan x="60" dy="40">   • perdre des visiteurs fait baisser les ventes</tspan>
      <tspan x="60" dy="80">Varnish est rapide:</tspan>
      <tspan x="60" dy="40">   • il diminue la charge des backends</tspan>
      <tspan x="60" dy="40">   • il peut masquer les maintenances</tspan>
      <tspan x="60" dy="40">   • la requête la plus rapide est celle qu'on ne fait pas</tspan>
    </text>
  </g>

  <g id="figures">
    <image xlink:href="img/exit-rate-wikia.png" x="0" y="0" width="800" height="600"/>
  </g>

  <g id="conclusion">
    <text x="260" y="100">Varnish en 5 étapes</text>
    <text y="150">
      <tspan x="60" dy="40">• Cacher le contenu statique</tspan>
      <tspan x="60" dy="40">• Configurer la compression</tspan>
      <tspan x="60" dy="40">• Cacher le contenu semi-statique</tspan>
      <tspan x="60" dy="40">• Automatiser l'invalidation du cache</tspan>
      <tspan x="60" dy="40">• Améliorer les back-ends</tspan>
    </text>
  </g>

  <g id="achievement">
    <use xlink:href="#conclusion" x="0" y="0"/>
    <image xlink:href="img/achievementgen.png" x="82" y="420" width="636" height="120"/>
  </g>

  <g id="features">
    <text x="260" y="100">Autres fonctionnalités</text>
    <text y="150">
      <tspan x="60" dy="40">• Streaming</tspan>
      <tspan x="60" dy="40">• Access Control Lists (ACL)</tspan>
      <tspan x="60" dy="40">• Multi-tenancy</tspan>
      <tspan x="60" dy="40">• Framework de test</tspan>
      <tspan x="60" dy="40">• Edge Side Includes (ESI)</tspan>
      <tspan x="60" dy="80">Et on trouve même des man pages ;)</tspan>
    </text>
  </g>
</svg>
